//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NSGPassManagement.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NSGPassManagementEntities : DbContext
    {
        public NSGPassManagementEntities()
            : base("name=NSGPassManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CivilianPassDetail> CivilianPassDetails { get; set; }
        public virtual DbSet<CoreCity> CoreCities { get; set; }
        public virtual DbSet<CoreIdentityType> CoreIdentityTypes { get; set; }
        public virtual DbSet<CorePassType> CorePassTypes { get; set; }
        public virtual DbSet<CoreQuarterType> CoreQuarterTypes { get; set; }
        public virtual DbSet<CoreRank> CoreRanks { get; set; }
        public virtual DbSet<CoreRelationship> CoreRelationships { get; set; }
        public virtual DbSet<CoreState> CoreStates { get; set; }
        public virtual DbSet<CoreUnit> CoreUnits { get; set; }
        public virtual DbSet<CoreUser> CoreUsers { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<GuestDependantPassDetail> GuestDependantPassDetails { get; set; }
        public virtual DbSet<NSGEmployee> NSGEmployees { get; set; }
        public virtual DbSet<NSGPass> NSGPasses { get; set; }
        public virtual DbSet<OutlivingPassDetail> OutlivingPassDetails { get; set; }
        public virtual DbSet<CivilianPassDetailView> CivilianPassDetailViews { get; set; }
        public virtual DbSet<GuestDependentPassDetailView> GuestDependentPassDetailViews { get; set; }
        public virtual DbSet<CivilianVehiclePassView> CivilianVehiclePassViews { get; set; }
        public virtual DbSet<NSGPersonalVehiclePassView> NSGPersonalVehiclePassViews { get; set; }
        public virtual DbSet<OutlivingPassView> OutlivingPassViews { get; set; }
        public virtual DbSet<VehiclePassDetail> VehiclePassDetails { get; set; }
        public virtual DbSet<PassDocument> PassDocuments { get; set; }
    
        public virtual ObjectResult<PassHolderDetailsGet_Result> PassHolderDetailsGet(Nullable<System.DateTime> issueDate, Nullable<System.DateTime> expiryDate, Nullable<long> passID, string personName, Nullable<int> passTypeID, string vehicleNumber)
        {
            var issueDateParameter = issueDate.HasValue ?
                new ObjectParameter("IssueDate", issueDate) :
                new ObjectParameter("IssueDate", typeof(System.DateTime));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var passIDParameter = passID.HasValue ?
                new ObjectParameter("PassID", passID) :
                new ObjectParameter("PassID", typeof(long));
    
            var personNameParameter = personName != null ?
                new ObjectParameter("PersonName", personName) :
                new ObjectParameter("PersonName", typeof(string));
    
            var passTypeIDParameter = passTypeID.HasValue ?
                new ObjectParameter("PassTypeID", passTypeID) :
                new ObjectParameter("PassTypeID", typeof(int));
    
            var vehicleNumberParameter = vehicleNumber != null ?
                new ObjectParameter("VehicleNumber", vehicleNumber) :
                new ObjectParameter("VehicleNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PassHolderDetailsGet_Result>("PassHolderDetailsGet", issueDateParameter, expiryDateParameter, passIDParameter, personNameParameter, passTypeIDParameter, vehicleNumberParameter);
        }
    }
}
